apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: git-sync
  name: git-sync
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: git-sync
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: git-sync
    spec:
      serviceAccountName: apache-airflow-scheduler
      containers:
        - env:
            - name: GIT_SYNC_REPO
              value: "https://github.com/FD-Data-Engineering/sf-airflow.git" ##repo-path-you-want-to-clone
            - name: GIT_SYNC_BRANCH
              value: "main" ##repo-branch
            - name: GIT_SUBPATH
              value: /docker-compose
            - name: GIT_SYNC_ROOT
              value: /usr/local/airflow
            - name: GIT_SYNC_DEST
              value: "dags" ##path-where-you-want-to-clone
            - name: GIT_SYNC_PERIOD
              value: "10"
            - name: GIT_SYNC_ONE_TIME
              value: "true"
          image: k8s.gcr.io/git-sync:v3.1.3
          name: git-sync
          resources: {}
      #     volumeMounts:
      #       - name: dags-pv
      #         mountPath: /usr/local/airflow/dags
      #       - name: logs-pv
      #         mountPath: /usr/local/airflow/logs
      #       - name: spark-scripts-pv
      #         mountPath: /usr/local/airflow/spark-scripts
      #       - name: downloads-pv
      #         mountPath: /usr/local/airflow/downloads
      #       - name: plugins-pv
      #         mountPath: /usr/local/airflow/plugins
      # restartPolicy: Always
      # volumes:
      #   - name: dags-pv
      #     persistentVolumeClaim:
      #       claimName: dags-pvc
      #   - name: logs-pv
      #     persistentVolumeClaim:
      #       claimName: logs-pvc
      #   - name: plugins-pv
      #     persistentVolumeClaim:
      #       claimName: plugins-pvc
      #   - name: downloads-pv
      #     persistentVolumeClaim:
      #       claimName: downloads-pvc
      #   - name: spark-scripts-pv
      #     persistentVolumeClaim:
      #       claimName: spark-scripts-pvc
status: {}
