apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: worker
  name: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: worker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/: "true"
        io.kompose.service: worker
    spec:
      containers:
        - args:
            - worker
          env:
            - name: EXECUTOR
              value: Celery
            - name: FERNET_KEY
              value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
          image: jpacerqueira83/docker_airflow:latest
          name: worker
          resources: {}
          volumeMounts:
            - mountPath: /usr/local/airflow/dags
              name: worker-claim0
            - mountPath: /var/run/docker.sock
              name: worker-claim1
            - mountPath: /usr/local/airflow/plugins
              name: worker-claim2
            - mountPath: /usr/local/airflow/spark_scripts
              name: worker-claim3
            - mountPath: /usr/local/airflow/downloads
              name: downloads
      restartPolicy: Always
      volumes:
        - name: worker-claim0
          persistentVolumeClaim:
            claimName: worker-claim0
        - name: worker-claim1
          persistentVolumeClaim:
            claimName: worker-claim1
        - name: worker-claim2
          persistentVolumeClaim:
            claimName: worker-claim2
        - name: worker-claim3
          persistentVolumeClaim:
            claimName: worker-claim3
        - name: downloads
          persistentVolumeClaim:
            claimName: downloads
status: {}
