apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: scheduler
  name: scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: scheduler
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: scheduler
    spec:
      containers:
        - args:
            - scheduler
          env:
            - name: EXECUTOR
              value: Celery
            - name: FERNET_KEY
              value: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - name: LOAD_EX
              value: "n"
            - name: POSTGRES_DB
              value: airflow
            - name: POSTGRES_PASSWORD
              value: airflow
            - name: POSTGRES_USER
              value: airflow
            - name: POSTGRES_ADMIN_PASSWORD
              value: airflow
            - name: REDIS_PASSWORD
              value: redispass
          image: jpacerqueira83/docker_airflow:latest
          name: scheduler
          resources: {}
          volumeMounts:
            - mountPath: /usr/local/airflow/dags
              name: scheduler-claim0
            - mountPath: /usr/local/airflow/plugins
              name: scheduler-claim1
            - mountPath: /usr/local/airflow/spark_scripts
              name: scheduler-claim2
            - mountPath: /usr/local/airflow/downloads
              name: downloads
      restartPolicy: Always
      volumes:
        - name: scheduler-claim0
          persistentVolumeClaim:
            claimName: scheduler-claim0
        - name: scheduler-claim1
          persistentVolumeClaim:
            claimName: scheduler-claim1
        - name: scheduler-claim2
          persistentVolumeClaim:
            claimName: scheduler-claim2
        - name: downloads
          persistentVolumeClaim:
            claimName: downloads
status: {}
